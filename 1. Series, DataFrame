{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"1. Series, DataFrame","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPlGzXadTyMPCtgOR4Mfnn8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"ONq4OyVrb0I2","executionInfo":{"status":"ok","timestamp":1622531899302,"user_tz":-540,"elapsed":5,"user":{"displayName":"소민호","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh54_mzlnkVqFMNEtkS9whNdrQKRT0BTwpIESQjOQ=s64","userId":"13788803923072454204"}}},"source":["import pandas as pd"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"slMd8Tbrb-Tc"},"source":["# pandas의 Series, DataFrame\n","* 한 종류의 데이터를 모아 놓은 것 - Series\n","* Series가 여러개 모이면 DataFrame이 된다."]},{"cell_type":"markdown","metadata":{"id":"2nzbKhkecIjE"},"source":["## Series"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L0FszPr0cNsZ","executionInfo":{"status":"ok","timestamp":1622531968778,"user_tz":-540,"elapsed":229,"user":{"displayName":"소민호","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh54_mzlnkVqFMNEtkS9whNdrQKRT0BTwpIESQjOQ=s64","userId":"13788803923072454204"}},"outputId":"eff88c45-88e8-41a2-d158-9e78878c5f13"},"source":["pd.Series([1, 2, 3, 4])"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    1\n","1    2\n","2    3\n","3    4\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ywN1PIPzcQzD","executionInfo":{"status":"ok","timestamp":1622532023798,"user_tz":-540,"elapsed":225,"user":{"displayName":"소민호","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh54_mzlnkVqFMNEtkS9whNdrQKRT0BTwpIESQjOQ=s64","userId":"13788803923072454204"}},"outputId":"00abb7c6-d730-46b2-8bf7-ae71a3bd882a"},"source":["pd.Series([1.1, 2.5, 3.3, 4.6])"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    1.1\n","1    2.5\n","2    3.3\n","3    4.6\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"hjikCPWjct0c"},"source":["자료형이 제일 큰 타입이 시리즈의 타입이 된다."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b3h6fnvDceLy","executionInfo":{"status":"ok","timestamp":1622532052537,"user_tz":-540,"elapsed":225,"user":{"displayName":"소민호","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh54_mzlnkVqFMNEtkS9whNdrQKRT0BTwpIESQjOQ=s64","userId":"13788803923072454204"}},"outputId":"85454a88-1756-4c19-99bb-25962d0167d5"},"source":["pd.Series([1, 2, 3, 4.5])"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    1.0\n","1    2.0\n","2    3.0\n","3    4.5\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"CpaRIptqclPx"},"source":["## DataFrame\n","* Series가 여러개 모여서 하나의 데이터 시트를 표현하면 DataFrame이 된다."]},{"cell_type":"markdown","metadata":{"id":"Pd8Pvf7RdAL6"},"source":["### 방법 1. list로만 만들기 ( 권장 x )\n","* 컬럼의 이름을 따로 지정해야 할 일이 생겨요(귀찮)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":139},"id":"RcBibVRIdLyp","executionInfo":{"status":"ok","timestamp":1622532315585,"user_tz":-540,"elapsed":228,"user":{"displayName":"소민호","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh54_mzlnkVqFMNEtkS9whNdrQKRT0BTwpIESQjOQ=s64","userId":"13788803923072454204"}},"outputId":"7ce3c57a-2b7b-46dd-9d90-352248f68b80"},"source":["# 시리즈는 1차원 배열, 시리즈가 모인 데이터 프레임은 2차원 배열\n","sample_data = [[\"소민호\", 34, 180.1],\n","               [\"김땡땡\", 33, 175.1],\n","               [\"박땡땡\", 28, 183.2]]\n","\n","pd.DataFrame(sample_data)"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>소민호</td>\n","      <td>34</td>\n","      <td>180.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>김땡땡</td>\n","      <td>33</td>\n","      <td>175.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>박땡땡</td>\n","      <td>28</td>\n","      <td>183.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     0   1      2\n","0  소민호  34  180.1\n","1  김땡땡  33  175.1\n","2  박땡땡  28  183.2"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":139},"id":"jdH62eQHdldr","executionInfo":{"status":"ok","timestamp":1622532384895,"user_tz":-540,"elapsed":242,"user":{"displayName":"소민호","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh54_mzlnkVqFMNEtkS9whNdrQKRT0BTwpIESQjOQ=s64","userId":"13788803923072454204"}},"outputId":"7e241457-2cc6-4544-dd65-3cad2bf0ac52"},"source":["df1 = pd.DataFrame(sample_data)\n","df1"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>소민호</td>\n","      <td>34</td>\n","      <td>180.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>김땡땡</td>\n","      <td>33</td>\n","      <td>175.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>박땡땡</td>\n","      <td>28</td>\n","      <td>183.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     0   1      2\n","0  소민호  34  180.1\n","1  김땡땡  33  175.1\n","2  박땡땡  28  183.2"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":139},"id":"24JfnRpTd2TQ","executionInfo":{"status":"ok","timestamp":1622532426292,"user_tz":-540,"elapsed":7,"user":{"displayName":"소민호","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh54_mzlnkVqFMNEtkS9whNdrQKRT0BTwpIESQjOQ=s64","userId":"13788803923072454204"}},"outputId":"0c1071ee-aadf-4dbc-9034-486d6346fb5a"},"source":["# 제목의 컬럼을 리스트로 지정하기\n","df1.columns = [\"이름\", \"나이\", \"키\"]\n","df1"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>나이</th>\n","      <th>키</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>소민호</td>\n","      <td>34</td>\n","      <td>180.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>김땡땡</td>\n","      <td>33</td>\n","      <td>175.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>박땡땡</td>\n","      <td>28</td>\n","      <td>183.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    이름  나이      키\n","0  소민호  34  180.1\n","1  김땡땡  33  175.1\n","2  박땡땡  28  183.2"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"Q7HWWiiheAVQ"},"source":["## 방법 2. dict로 만들기 - ver1\n","* 자주 사용하는 방법 중 하나.\n","* 웹 페이지 스크래이핑 하고 나서 자주 사용했었어요.\n","```\n","딕셔너리(dict)의 key - 컬럼의 이름 (컬럼명)\n","딕셔너리(dict)의 value - \"반드시\" 리스트로 이루어져 있어야 한다.(시리즈)\n","모든 value의 리스트는 길이가 똑같아야 한다.\n","```"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":142},"id":"hWdZI51aeVLn","executionInfo":{"status":"ok","timestamp":1622532747450,"user_tz":-540,"elapsed":248,"user":{"displayName":"소민호","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh54_mzlnkVqFMNEtkS9whNdrQKRT0BTwpIESQjOQ=s64","userId":"13788803923072454204"}},"outputId":"3695de2b-10f1-4e57-f421-03f2ee762872"},"source":["sample_data = {\n","    \"이름\": [\"소민호\", \"김땡땡\", \"박땡땡\"],\n","    \"나이\": [34, 33, 28],\n","    \"키\": [180.1, 175.5, 183.2]\n","}\n","\n","df2 = pd.DataFrame(sample_data)\n","df2"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>나이</th>\n","      <th>키</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>소민호</td>\n","      <td>34</td>\n","      <td>180.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>김땡땡</td>\n","      <td>33</td>\n","      <td>175.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>박땡땡</td>\n","      <td>28</td>\n","      <td>183.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    이름  나이      키\n","0  소민호  34  180.1\n","1  김땡땡  33  175.5\n","2  박땡땡  28  183.2"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":383},"id":"Q7hl4fJ5fOyx","executionInfo":{"status":"error","timestamp":1622532813915,"user_tz":-540,"elapsed":248,"user":{"displayName":"소민호","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh54_mzlnkVqFMNEtkS9whNdrQKRT0BTwpIESQjOQ=s64","userId":"13788803923072454204"}},"outputId":"aab3c0e5-aece-472f-cebe-f0ea66b9930c"},"source":["sample_data = {\n","    \"이름\": [\"소민호\", \"김땡땡\", \"박땡땡\"], # 데이터 개수 : 3\n","    \"나이\": [34, 33, 28, 22],   # 데이터 개수 : 4\n","    \"키\": [180.1, 175.5, 183.2] # 데이터 개수 : 3\n","}\n","\n","df2 = pd.DataFrame(sample_data)\n","df2"],"execution_count":9,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-e7f57c5252c9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m }\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mdf2\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msample_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0mdf2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, index, columns, dtype, copy)\u001b[0m\n\u001b[1;32m    466\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    467\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdict\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 468\u001b[0;31m             \u001b[0mmgr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minit_dict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    469\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mMaskedArray\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    470\u001b[0m             \u001b[0;32mimport\u001b[0m \u001b[0mnumpy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmrecords\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mmrecords\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36minit_dict\u001b[0;34m(data, index, columns, dtype)\u001b[0m\n\u001b[1;32m    281\u001b[0m             \u001b[0marr\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mis_datetime64tz_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0marr\u001b[0m \u001b[0;32min\u001b[0m \u001b[0marrays\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    282\u001b[0m         ]\n\u001b[0;32m--> 283\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0marrays_to_mgr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marrays\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata_names\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    284\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    285\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36marrays_to_mgr\u001b[0;34m(arrays, arr_names, index, columns, dtype, verify_integrity)\u001b[0m\n\u001b[1;32m     76\u001b[0m         \u001b[0;31m# figure out the index, if necessary\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     77\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mindex\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 78\u001b[0;31m             \u001b[0mindex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mextract_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marrays\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     79\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m             \u001b[0mindex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mensure_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36mextract_index\u001b[0;34m(data)\u001b[0m\n\u001b[1;32m    395\u001b[0m             \u001b[0mlengths\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mraw_lengths\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    396\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlengths\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 397\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"arrays must all be same length\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    398\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    399\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mhave_dicts\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: arrays must all be same length"]}]},{"cell_type":"markdown","metadata":{"id":"O4GWkrgMffIH"},"source":["## 방법 3. dict로 만들기 - ver2\n","* json 크롤링 했을 때, 데이터를 바로 DataFrame화 시키고 싶을 때 사용\n","* json을 이용해 데이터를 가져올 때 일반적인 모습\n","\n","### JSON\n","* JavaScript Object Notation : 자바스크립트 객체 표현 방식\n","* python의 dict와 똑같이 생겼어요\n","  * 단, 모든 키값이 전부다 문자열이어야만 한다.\n","```javascript\n","json_data = {\n","  \"result\" : 200,\n","  \"datas\" : [\n","        {\n","          \"이름\": \"소민호\",\n","          \"나이\": 34,\n","          \"키\": 180.1\n","        },\n","        {\n","          ...\n","        },\n","        {\n","          ...\n","        }\n","    ]\n","}\n","datas = json_data['datas']\n","이렇게 가져 오면 datas에는\n"," [\n","        {\n","          \"이름\": \"소민호\",\n","          \"나이\": 34,\n","          \"키\": 180.1\n","        },\n","        {\n","          ...\n","        },\n","        {\n","          ...\n","        }\n","    ]\n","    가 들어있다.\n","```\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_LWxGwCtfu-5","executionInfo":{"status":"ok","timestamp":1622533273540,"user_tz":-540,"elapsed":236,"user":{"displayName":"소민호","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh54_mzlnkVqFMNEtkS9whNdrQKRT0BTwpIESQjOQ=s64","userId":"13788803923072454204"}},"outputId":"f627ca71-3d87-467f-fddb-99c338f53a7f"},"source":["sample_data = [\n","  {\n","    \"이름\" : \"소민호\",\n","    \"나이\" : 34,\n","    \"키\": 180.1\n","  },\n","  {\n","    \"이름\": \"김땡땡\",\n","    \"나이\" : 33,\n","    \"키\": 175.5\n","  },\n","  {\n","    \"이름\" : \"박땡땡\",\n","    \"나이\" : 28,\n","    \"키\": 183.2\n","  }\n","]\n","\n","sample_data"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'나이': 34, '이름': '소민호', '키': 180.1},\n"," {'나이': 33, '이름': '김땡땡', '키': 175.5},\n"," {'나이': 28, '이름': '박땡땡', '키': 183.2}]"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":139},"id":"1_lv4fN9hPVy","executionInfo":{"status":"ok","timestamp":1622533313426,"user_tz":-540,"elapsed":273,"user":{"displayName":"소민호","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh54_mzlnkVqFMNEtkS9whNdrQKRT0BTwpIESQjOQ=s64","userId":"13788803923072454204"}},"outputId":"a688a428-2a81-4528-bfda-ac5a121002f5"},"source":["pd.DataFrame(sample_data) # JSON 형태의 데이터를 DataFrame으로"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>나이</th>\n","      <th>키</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>소민호</td>\n","      <td>34</td>\n","      <td>180.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>김땡땡</td>\n","      <td>33</td>\n","      <td>175.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>박땡땡</td>\n","      <td>28</td>\n","      <td>183.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    이름  나이      키\n","0  소민호  34  180.1\n","1  김땡땡  33  175.5\n","2  박땡땡  28  183.2"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"o79CwrUehZEo"},"source":[""],"execution_count":null,"outputs":[]}]}